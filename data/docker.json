[
    {
        "question": "What is the primary difference between a Docker image and a Docker container?",
        "options": [
            "An image is a running instance, a container is a template.",
            "An image is a template for creating containers, a container is a running instance of an image.",
            "An image stores logs, a container stores configuration.",
            "There is no difference."
        ],
        "answer": [
            1
        ],
        "explanation": "A Docker image is a read-only template used to create containers. A container is a running instance of an image."
    },
    {
        "question": "You are troubleshooting a container that exits immediately after starting. What is the most likely cause?",
        "options": [
            "The container's main process has finished execution.",
            "The image is corrupted.",
            "Docker daemon crashed.",
            "The container port is not exposed."
        ],
        "answer": [
            0
        ],
        "explanation": "A container runs as long as its main process is running. If the process finishes, the container exits."
    },
    {
        "question": "Which Docker command is used to build an image from a Dockerfile?",
        "options": [
            "docker run",
            "docker build",
            "docker create",
            "docker compose"
        ],
        "answer": [
            1
        ],
        "explanation": "'docker build' is used to build an image from a Dockerfile."
    },
    {
        "question": "A company wants to reduce image size and build time for their Node.js app. Which Dockerfile best practice should they follow?",
        "options": [
            "Use a single RUN statement for all commands.",
            "Use a multi-stage build and an official Node.js base image.",
            "Install all dependencies globally.",
            "Use root user for all operations."
        ],
        "answer": [
            1
        ],
        "explanation": "Multi-stage builds and official images help reduce image size and improve security."
    },
    {
        "question": "Which of the following is a real-world scenario for using Docker Compose?",
        "options": [
            "Running a single static HTML site.",
            "Orchestrating a multi-container web application with a database and cache.",
            "Building a single image.",
            "Managing Docker Hub repositories."
        ],
        "answer": [
            1
        ],
        "explanation": "Docker Compose is ideal for defining and running multi-container applications."
    },
    {
        "question": "Which certification is most relevant for Docker and containerization?",
        "options": [
            "CKA (Certified Kubernetes Administrator)",
            "DCA (Docker Certified Associate)",
            "AWS Solutions Architect",
            "RHCE (Red Hat Certified Engineer)"
        ],
        "answer": [
            1
        ],
        "explanation": "DCA is the official Docker certification."
    },
    {
        "question": "During an interview, you are asked how to persist data in Docker containers. What is the best answer?",
        "options": [
            "Use Docker volumes to store data outside the container filesystem.",
            "Store data in /tmp inside the container.",
            "Rely on container restarts.",
            "Use environment variables."
        ],
        "answer": [
            0
        ],
        "explanation": "Docker volumes are the recommended way to persist data beyond the container lifecycle."
    },
    {
        "question": "You notice high disk usage on a Docker host. Which command helps identify unused images and containers?",
        "options": [
            "docker ps",
            "docker system df",
            "docker logs",
            "docker inspect"
        ],
        "answer": [
            1
        ],
        "explanation": "'docker system df' shows disk usage by images, containers, and volumes."
    },
    {
        "question": "What is the effect of the 'COPY' instruction in a Dockerfile?",
        "options": [
            "Copies files from the container to the host.",
            "Copies files from the host into the image at build time.",
            "Copies files between running containers.",
            "Copies files from Docker Hub."
        ],
        "answer": [
            1
        ],
        "explanation": "COPY copies files from the build context (host) into the image."
    },
    {
        "question": "A containerized app needs to communicate with another container on the same Docker network. What is the recommended approach?",
        "options": [
            "Use the host's IP address.",
            "Use the container's name as the hostname.",
            "Use localhost.",
            "Expose ports to the host."
        ],
        "answer": [
            1
        ],
        "explanation": "Containers on the same Docker network can communicate using container names as hostnames."
    },
    {
        "question": "Which command lists all running Docker containers?",
        "options": [
            "docker ps",
            "docker images",
            "docker run",
            "docker list"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker ps' lists all running containers."
    },
    {
        "question": "How do you remove all stopped containers in Docker?",
        "options": [
            "docker rm $(docker ps -a -q)",
            "docker stop all",
            "docker remove all",
            "docker clean containers"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker rm $(docker ps -a -q)' removes all stopped containers."
    },
    {
        "question": "What is the default network driver for Docker containers?",
        "options": [
            "host",
            "bridge",
            "overlay",
            "macvlan"
        ],
        "answer": [
            1
        ],
        "explanation": "The default network driver is 'bridge'."
    },
    {
        "question": "Which Dockerfile instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY, and ADD instructions that follow it?",
        "options": [
            "WORKDIR",
            "RUN",
            "CMD",
            "ENV"
        ],
        "answer": [
            0
        ],
        "explanation": "WORKDIR sets the working directory for subsequent instructions."
    },
    {
        "question": "What is the main benefit of using Docker volumes over bind mounts?",
        "options": [
            "Volumes are managed by Docker and work on all platforms.",
            "Bind mounts are more secure.",
            "Volumes are slower.",
            "Bind mounts are portable."
        ],
        "answer": [
            0
        ],
        "explanation": "Volumes are managed by Docker and are portable across platforms."
    },
    {
        "question": "Which command is used to attach your terminal to a running container?",
        "options": [
            "docker attach",
            "docker exec -it",
            "docker connect",
            "docker join"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker attach' attaches your terminal to a running container."
    },
    {
        "question": "What is the recommended way to pass secrets to a Docker container in production?",
        "options": [
            "Environment variables or Docker secrets",
            "Hardcode in Dockerfile",
            "Store in image",
            "Use plain text files in the container"
        ],
        "answer": [
            0
        ],
        "explanation": "Use environment variables or Docker secrets for sensitive data."
    },
    {
        "question": "Which Docker Compose file version introduced support for secrets?",
        "options": [
            "2.0",
            "2.1",
            "3.1",
            "3.7"
        ],
        "answer": [
            2
        ],
        "explanation": "Secrets support was introduced in version 3.1."
    },
    {
        "question": "What is the effect of the ENTRYPOINT instruction in a Dockerfile?",
        "options": [
            "Specifies the command to run when the container starts.",
            "Sets environment variables.",
            "Copies files into the image.",
            "Exposes ports."
        ],
        "answer": [
            0
        ],
        "explanation": "ENTRYPOINT sets the command that always runs when the container starts."
    },
    {
        "question": "Which Docker command is used to view logs from a running container?",
        "options": [
            "docker logs",
            "docker view",
            "docker inspect",
            "docker output"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker logs' displays logs from a running container."
    },
    {
        "question": "Which command is used to stop a running Docker container?",
        "options": [
            "docker stop",
            "docker pause",
            "docker kill",
            "docker end"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stop' gracefully stops a running container."
    },
    {
        "question": "What is the purpose of the EXPOSE instruction in a Dockerfile?",
        "options": [
            "To publish a container's port to the host.",
            "To document which ports the container will listen on at runtime.",
            "To open a firewall port.",
            "To start a service inside the container."
        ],
        "answer": [
            1
        ],
        "explanation": "EXPOSE is a documentation instruction; it does not publish the port but indicates which ports are intended to be published."
    },
    {
        "question": "How can you run a container in the background (detached mode)?",
        "options": [
            "docker run -d",
            "docker run -b",
            "docker start -d",
            "docker exec -d"
        ],
        "answer": [
            0
        ],
        "explanation": "The '-d' flag runs a container in detached mode."
    },
    {
        "question": "Which file is used by Docker Compose to define multi-container applications?",
        "options": [
            "docker-compose.yml",
            "Dockerfile.compose",
            "compose.json",
            "dockerfile.yml"
        ],
        "answer": [
            0
        ],
        "explanation": "docker-compose.yml is the default file for Docker Compose."
    },
    {
        "question": "What is the effect of the --rm flag when running a Docker container?",
        "options": [
            "Removes the image after the container stops.",
            "Removes the container after it exits.",
            "Removes all stopped containers.",
            "Removes all volumes."
        ],
        "answer": [
            1
        ],
        "explanation": "--rm removes the container after it exits."
    },
    {
        "question": "Which command is used to create a new Docker volume?",
        "options": [
            "docker volume create",
            "docker create volume",
            "docker make volume",
            "docker volume new"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker volume create' creates a new Docker volume."
    },
    {
        "question": "What is the main advantage of using multi-stage builds in Dockerfiles?",
        "options": [
            "Faster container startup",
            "Smaller final image size",
            "More environment variables",
            "Automatic port exposure"
        ],
        "answer": [
            1
        ],
        "explanation": "Multi-stage builds help reduce the final image size by copying only necessary artifacts."
    },
    {
        "question": "Which Docker command is used to remove an image?",
        "options": [
            "docker rmi",
            "docker remove image",
            "docker image rm",
            "docker delete image"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker rmi' removes an image from the local storage."
    },
    {
        "question": "What is the function of the HEALTHCHECK instruction in a Dockerfile?",
        "options": [
            "To monitor the health of a running container.",
            "To restart the container if it fails.",
            "To expose a health endpoint.",
            "To set environment variables."
        ],
        "answer": [
            0
        ],
        "explanation": "HEALTHCHECK defines a command to test the container's health."
    },
    {
        "question": "Which Docker certification is designed for professionals with experience in container orchestration and security?",
        "options": [
            "DCA (Docker Certified Associate)",
            "CKA (Certified Kubernetes Administrator)",
            "CCNA (Cisco Certified Network Associate)",
            "AWS Certified Developer"
        ],
        "answer": [
            0
        ],
        "explanation": "DCA is the official Docker certification for professionals."
    },
    {
        "question": "Which command is used to list all Docker images on your system?",
        "options": [
            "docker images",
            "docker ps -a",
            "docker list images",
            "docker image list"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker images' lists all images on your system."
    },
    {
        "question": "How do you run a container and automatically remove it when it exits?",
        "options": [
            "docker run --rm",
            "docker run -d",
            "docker remove run",
            "docker auto-remove"
        ],
        "answer": [
            0
        ],
        "explanation": "The --rm flag removes the container after it exits."
    },
    {
        "question": "What is the default location for Docker volumes on a Linux host?",
        "options": [
            "/var/lib/docker/volumes/",
            "/docker/volumes/",
            "/usr/local/docker/volumes/",
            "/opt/docker/volumes/"
        ],
        "answer": [
            0
        ],
        "explanation": "The default location is /var/lib/docker/volumes/."
    },
    {
        "question": "Which command is used to execute a command in a running container?",
        "options": [
            "docker exec",
            "docker run",
            "docker attach",
            "docker start"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker exec' runs a command in a running container."
    },
    {
        "question": "What is the main purpose of the .dockerignore file?",
        "options": [
            "To exclude files from the build context.",
            "To ignore Docker commands.",
            "To prevent Docker from running.",
            "To hide images from Docker Hub."
        ],
        "answer": [
            0
        ],
        "explanation": "The .dockerignore file excludes files from the build context."
    },
    {
        "question": "Which command is used to restart a stopped container?",
        "options": [
            "docker start",
            "docker restart",
            "docker run",
            "docker resume"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker start' restarts a stopped container."
    },
    {
        "question": "How do you specify a custom name for a new container?",
        "options": [
            "docker run --name mycontainer",
            "docker create --custom-name mycontainer",
            "docker name mycontainer",
            "docker start --name mycontainer"
        ],
        "answer": [
            0
        ],
        "explanation": "Use --name to specify a custom container name."
    },
    {
        "question": "Which command removes all unused containers, networks, images, and optionally, volumes?",
        "options": [
            "docker system prune",
            "docker clean",
            "docker prune all",
            "docker remove unused"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker system prune' removes all unused data."
    },
    {
        "question": "What is the function of the CMD instruction in a Dockerfile?",
        "options": [
            "Provides defaults for an executing container.",
            "Sets environment variables.",
            "Copies files into the image.",
            "Exposes ports."
        ],
        "answer": [
            0
        ],
        "explanation": "CMD provides defaults for the container at runtime."
    },
    {
        "question": "Which command is used to pull an image from Docker Hub?",
        "options": [
            "docker pull",
            "docker fetch",
            "docker get",
            "docker download"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker pull' downloads an image from Docker Hub."
    },
    {
        "question": "What is the difference between ENTRYPOINT and CMD in a Dockerfile?",
        "options": [
            "ENTRYPOINT sets the default command, CMD provides arguments to ENTRYPOINT.",
            "CMD sets the default command, ENTRYPOINT provides arguments to CMD.",
            "Both are identical.",
            "ENTRYPOINT is ignored if CMD is present."
        ],
        "answer": [
            0
        ],
        "explanation": "ENTRYPOINT sets the main command, CMD provides default arguments. If both are present, CMD's values are passed as arguments to ENTRYPOINT."
    },
    {
        "question": "Which command shows the real-time resource usage of containers?",
        "options": [
            "docker stats",
            "docker top",
            "docker monitor",
            "docker usage"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stats' displays real-time resource usage statistics for containers."
    },
    {
        "question": "How do you map port 8080 on the host to port 80 in the container?",
        "options": [
            "docker run -p 8080:80 ...",
            "docker run -p 80:8080 ...",
            "docker run --port 8080:80 ...",
            "docker run --expose 8080:80 ..."
        ],
        "answer": [
            0
        ],
        "explanation": "The syntax is hostPort:containerPort, so -p 8080:80 maps host 8080 to container 80."
    },
    {
        "question": "Which command is used to log in to a Docker registry?",
        "options": [
            "docker login",
            "docker auth",
            "docker connect",
            "docker registry login"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker login' authenticates to a Docker registry."
    },
    {
        "question": "What is the effect of 'docker network inspect'?",
        "options": [
            "Displays detailed information about a Docker network.",
            "Lists all available networks.",
            "Removes a network.",
            "Creates a new network."
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network inspect' shows detailed info about a specific network."
    },
    {
        "question": "How do you specify a build argument in a Dockerfile?",
        "options": [
            "ARG",
            "ENV",
            "RUN",
            "FROM"
        ],
        "answer": [
            0
        ],
        "explanation": "ARG defines a build-time variable."
    },
    {
        "question": "Which command removes a Docker network?",
        "options": [
            "docker network rm",
            "docker rm network",
            "docker network remove",
            "docker delete network"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network rm' removes a Docker network."
    },
    {
        "question": "What is the default bridge network's subnet range?",
        "options": [
            "172.17.0.0/16",
            "192.168.0.0/16",
            "10.0.0.0/8",
            "172.18.0.0/16"
        ],
        "answer": [
            0
        ],
        "explanation": "The default bridge network uses 172.17.0.0/16."
    },
    {
        "question": "How do you copy a file from a running container to the host?",
        "options": [
            "docker cp <container>:<path> <hostpath>",
            "docker copy <container>:<path> <hostpath>",
            "docker export <container> <hostpath>",
            "docker save <container> <hostpath>"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker cp' copies files/folders between containers and the host."
    },
    {
        "question": "Which command lists all Docker volumes?",
        "options": [
            "docker volume ls",
            "docker ls volumes",
            "docker list volumes",
            "docker volume list"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker volume ls' lists all volumes."
    },
    {
        "question": "What is the purpose of the --build flag in 'docker-compose up'?",
        "options": [
            "To build images before starting containers.",
            "To rebuild existing containers.",
            "To remove unused images.",
            "To update the Docker daemon."
        ],
        "answer": [
            0
        ],
        "explanation": "The --build flag forces a rebuild of images before starting containers."
    },
    {
        "question": "Which command is used to view detailed information about a specific Docker container?",
        "options": [
            "docker inspect",
            "docker details",
            "docker info",
            "docker show"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker inspect' provides detailed information about a container."
    },
    {
        "question": "What is the purpose of the --network flag in 'docker run'?",
        "options": [
            "To specify the network for the container.",
            "To create a new network.",
            "To connect to a remote Docker host.",
            "To expose ports."
        ],
        "answer": [
            0
        ],
        "explanation": "The --network flag specifies which network the container should connect to."
    },
    {
        "question": "How do you remove all unused images in Docker?",
        "options": [
            "docker image prune",
            "docker rmi unused",
            "docker remove images",
            "docker clean images"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker image prune' removes all unused images."
    },
    {
        "question": "What is the purpose of the --detach flag in 'docker run'?",
        "options": [
            "To run the container in the background.",
            "To run the container interactively.",
            "To remove the container after it exits.",
            "To expose ports."
        ],
        "answer": [
            0
        ],
        "explanation": "The --detach flag runs the container in detached mode, allowing it to run in the background."
    },
    {
        "question": "Which command is used to create a new Docker network?",
        "options": [
            "docker network create",
            "docker create network",
            "docker make network",
            "docker network new"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network create' creates a new Docker network."
    },
    {
        "question": "What is the purpose of the --rm flag in 'docker run'?",
        "options": [
            "To remove the container after it exits.",
            "To run the container in detached mode.",
            "To expose ports.",
            "To set environment variables."
        ],
        "answer": [
            0
        ],
        "explanation": "--rm automatically removes the container when it exits."
    },
    {
        "question": "What command is used to create a new Docker container?",
        "options": [
            "docker create",
            "docker make",
            "docker new",
            "docker container create"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker create' is used to create a new container."
    },
    {
        "question": "Which of the following commands lists all Docker networks?",
        "options": [
            "docker network ls",
            "docker network list",
            "docker ls networks",
            "docker list networks"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network ls' lists all networks."
    },
    {
        "question": "What is the default behavior of the 'docker run' command regarding container removal?",
        "options": [
            "The container is removed after it stops.",
            "The container is not removed automatically.",
            "The container is removed only on error.",
            "The container is paused, not removed."
        ],
        "answer": [
            1
        ],
        "explanation": "By default, the container is not removed automatically after it stops."
    },
    {
        "question": "Which Docker command would you use to view the history of an image?",
        "options": [
            "docker history",
            "docker image history",
            "docker inspect image",
            "docker image inspect"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker history' shows the history of an image including layers and commands."
    },
    {
        "question": "What is the purpose of the --link flag in 'docker run'?",
        "options": [
            "To link a container to another container.",
            "To link a container to a host directory.",
            "To link a container to a network.",
            "To link a container to an image."
        ],
        "answer": [
            0
        ],
        "explanation": "--link allows you to link a container to another container, enabling communication between them."
    },
    {
        "question": "How do you check the IP address of a running container?",
        "options": [
            "docker inspect <container>",
            "docker exec <container> hostname -i",
            "docker network inspect <network>",
            "docker ps -q --filter 'name=<container>'"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker inspect <container>' shows detailed information about the container, including its IP address."
    },
    {
        "question": "Which command is used to create a Docker service in swarm mode?",
        "options": [
            "docker service create",
            "docker create service",
            "docker swarm service create",
            "docker service deploy"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service create' is used to create a new service in Docker swarm mode."
    },
    {
        "question": "What is the purpose of the --replicas flag in 'docker service create'?",
        "options": [
            "To specify the number of service instances.",
            "To specify the number of container replicas.",
            "To limit the number of active connections.",
            "To set the number of restart attempts."
        ],
        "answer": [
            0
        ],
        "explanation": "--replicas specifies how many instances of the service should run."
    },
    {
        "question": "How do you remove a Docker service?",
        "options": [
            "docker service rm",
            "docker remove service",
            "docker service delete",
            "docker delete service"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service rm' removes a service from Docker swarm mode."
    },
    {
        "question": "What command is used to list all Docker services in swarm mode?",
        "options": [
            "docker service ls",
            "docker service list",
            "docker ls services",
            "docker list services"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service ls' lists all services in Docker swarm mode."
    },
    {
        "question": "What is the purpose of the --mode flag in 'docker service create'?",
        "options": [
            "To specify the service mode (replicated or global).",
            "To set the network mode.",
            "To define the restart policy.",
            "To limit resource usage."
        ],
        "answer": [
            0
        ],
        "explanation": "--mode sets the mode for the service, either replicated or global."
    },
    {
        "question": "How do you scale a Docker service to 5 replicas?",
        "options": [
            "docker service scale <service>=5",
            "docker service update --replicas 5 <service>",
            "docker update service --replicas 5 <service>",
            "docker service set replicas <service> 5"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service scale <service>=5' scales the service to 5 replicas."
    },
    {
        "question": "What is the command to update a running Docker service?",
        "options": [
            "docker service update",
            "docker update service",
            "docker service modify",
            "docker service change"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service update' updates the configuration of a running service."
    },
    {
        "question": "How do you view the logs of a Docker service?",
        "options": [
            "docker service logs",
            "docker logs service",
            "docker service view-logs",
            "docker service inspect"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service logs' shows the logs for a Docker service."
    },
    {
        "question": "What is the purpose of the --with-registry-auth flag in 'docker stack deploy'?",
        "options": [
            "To pass registry authentication to the swarm nodes.",
            "To authenticate the Docker CLI to the registry.",
            "To encrypt the stack file.",
            "To enable experimental features."
        ],
        "answer": [
            0
        ],
        "explanation": "--with-registry-auth provides registry credentials to the swarm nodes."
    },
    {
        "question": "How do you deploy a stack in Docker swarm mode?",
        "options": [
            "docker stack deploy",
            "docker deploy stack",
            "docker swarm deploy",
            "docker service deploy"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack deploy' deploys a new stack or updates an existing stack in Docker swarm mode."
    },
    {
        "question": "What is the command to remove a Docker stack?",
        "options": [
            "docker stack rm",
            "docker remove stack",
            "docker stack delete",
            "docker delete stack"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack rm' removes a stack from Docker swarm mode."
    },
    {
        "question": "How do you list all stacks in Docker swarm mode?",
        "options": [
            "docker stack ls",
            "docker stack list",
            "docker ls stacks",
            "docker list stacks"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack ls' lists all stacks in Docker swarm mode."
    },
    {
        "question": "What is the command to update a stack in swarm mode?",
        "options": [
            "docker stack deploy",
            "docker stack update",
            "docker service update",
            "docker update stack"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack deploy' with the same compose file updates an existing stack in Docker swarm mode."
    },
    {
        "question": "How do you view the details of a stack in swarm mode?",
        "options": [
            "docker stack inspect",
            "docker inspect stack",
            "docker stack details",
            "docker details stack"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack inspect' shows detailed information about a stack."
    },
    {
        "question": "What is the command to view the logs of a stack in swarm mode?",
        "options": [
            "docker stack logs",
            "docker service logs",
            "docker logs stack",
            "docker stack view-logs"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack logs' shows the logs for all services in a stack in swarm mode."
    },
    {
        "question": "How do you roll back a stack to a previous version in swarm mode?",
        "options": [
            "docker stack rollback",
            "docker service rollback",
            "docker stack update --rollback",
            "docker service update --rollback"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack rollback' reverts a stack to its previous stable version in swarm mode."
    },
    {
        "question": "What is the command to pause a service in swarm mode?",
        "options": [
            "docker service pause",
            "docker pause service",
            "docker service stop",
            "docker stop service"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service pause' pauses a running service in swarm mode."
    },
    {
        "question": "What is the command to unpause a paused service in swarm mode?",
        "options": [
            "docker service unpause",
            "docker unpause service",
            "docker service start",
            "docker start service"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service unpause' resumes a paused service in swarm mode."
    },
    {
        "question": "How do you view the resource usage of a service in swarm mode?",
        "options": [
            "docker service stats",
            "docker service top",
            "docker inspect service",
            "docker container stats"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service stats' shows the resource usage of a service in swarm mode."
    },
    {
        "question": "What is the command to limit the CPU and memory of a service in swarm mode?",
        "options": [
            "docker service update --limit-cpu --limit-memory",
            "docker update service --cpu-shares --mem-limit",
            "docker service scale --cpus --memory",
            "docker service run --cpus --memory"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service update --limit-cpu --limit-memory' sets the CPU and memory limits for a service in swarm mode."
    },
    {
        "question": "How do you set an environment variable for a service in swarm mode?",
        "options": [
            "docker service create --env VAR=value",
            "docker service update --env VAR=value",
            "Both 1 and 2",
            "docker config set VAR=value"
        ],
        "answer": [
            2
        ],
        "explanation": "You can set environment variables for a service using --env flag with docker service create or update."
    },
    {
        "question": "What is the command to remove all stopped services in swarm mode?",
        "options": [
            "docker service prune",
            "docker service rm $(docker service ls -q)",
            "docker remove service --all",
            "docker service delete --all"
        ],
        "answer": [
            1
        ],
        "explanation": "'docker service rm $(docker service ls -q)' removes all stopped services in swarm mode."
    },
    {
        "question": "How do you list all nodes in a Docker swarm including their status?",
        "options": [
            "docker node ls",
            "docker node list",
            "docker ls nodes",
            "docker list nodes"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node ls' lists all nodes in the swarm along with their status."
    },
    {
        "question": "What is the command to promote a node to manager in Docker swarm?",
        "options": [
            "docker node promote",
            "docker promote node",
            "docker node upgrade",
            "docker node demote"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node promote' promotes a worker node to manager in Docker swarm."
    },
    {
        "question": "How do you drain a node in Docker swarm?",
        "options": [
            "docker node drain",
            "docker drain node",
            "docker node stop",
            "docker node pause"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node drain' marks a node as unavailable for tasks and safely drains it."
    },
    {
        "question": "What is the command to remove a node from a Docker swarm?",
        "options": [
            "docker node rm",
            "docker remove node",
            "docker node delete",
            "docker delete node"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node rm' removes a node from the swarm."
    },
    {
        "question": "How do you update the Docker daemon configuration?",
        "options": [
            "Edit /etc/docker/daemon.json and restart Docker.",
            "docker daemon update",
            "docker service update --image <image>",
            "docker system update"
        ],
        "answer": [
            0
        ],
        "explanation": "Edit the daemon.json file and restart the Docker service to update the daemon configuration."
    },
    {
        "question": "What is the command to view the Docker daemon logs?",
        "options": [
            "journalctl -u docker",
            "docker logs daemon",
            "docker daemon logs",
            "systemctl status docker"
        ],
        "answer": [
            0
        ],
        "explanation": "'journalctl -u docker' shows the logs for the Docker daemon."
    },
    {
        "question": "How do you enable Docker experimental features?",
        "options": [
            "Edit /etc/docker/daemon.json and add 'experimental': true.",
            "docker experimental enable",
            "Set DOCKER_EXPERIMENTAL=1",
            "All of the above"
        ],
        "answer": [
            3
        ],
        "explanation": "Experimental features can be enabled by setting the appropriate configuration in daemon.json or by setting the environment variable."
    },
    {
        "question": "What is the command to check Docker version details?",
        "options": [
            "docker version",
            "docker --version",
            "docker info",
            "All of the above"
        ],
        "answer": [
            3
        ],
        "explanation": "Docker version details can be checked using 'docker version', 'docker --version', or 'docker info'."
    },
    {
        "question": "How do you remove all Docker data including images, containers, and volumes?",
        "options": [
            "docker system prune -a --volumes",
            "docker remove all -v",
            "docker system clean --all",
            "docker clean all -v"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker system prune -a --volumes' removes all unused data including images, containers, and volumes."
    },
    {
        "question": "What is the command to create a Docker network with a specific subnet?",
        "options": [
            "docker network create --subnet=<subnet>",
            "docker network add --subnet=<subnet>",
            "docker create network --subnet=<subnet>",
            "docker network config --subnet=<subnet>"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network create --subnet=<subnet>' creates a network with the specified subnet."
    },
    {
        "question": "How do you connect a container to a specific network?",
        "options": [
            "docker run --network=<network>",
            "docker network connect <network> <container>",
            "Both 1 and 2",
            "docker attach --network=<network> <container>"
        ],
        "answer": [
            2
        ],
        "explanation": "You can connect a container to a network at runtime using --network flag or by using 'docker network connect' command."
    },
    {
        "question": "What is the command to disconnect a container from a network?",
        "options": [
            "docker network disconnect <network> <container>",
            "docker disconnect --network=<network> <container>",
            "docker network detach <network> <container>",
            "docker detach --network=<network> <container>"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker network disconnect <network> <container>' disconnects a container from a network."
    },
    {
        "question": "How do you list all active Docker contexts?",
        "options": [
            "docker context ls",
            "docker context list",
            "docker ls contexts",
            "docker list contexts"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker context ls' lists all active Docker contexts."
    },
    {
        "question": "What is the command to create a new Docker context?",
        "options": [
            "docker context create",
            "docker create context",
            "docker context new",
            "docker new context"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker context create' creates a new Docker context."
    },
    {
        "question": "How do you switch to a different Docker context?",
        "options": [
            "docker context use <context>",
            "docker use context <context>",
            "docker switch context <context>",
            "docker context switch <context>"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker context use <context>' switches to the specified Docker context."
    },
    {
        "question": "What is the command to remove a Docker context?",
        "options": [
            "docker context rm",
            "docker remove context",
            "docker context delete",
            "docker delete context"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker context rm' removes a Docker context."
    },
    {
        "question": "How do you view the current Docker context?",
        "options": [
            "docker context show",
            "docker context inspect",
            "docker info",
            "docker current context"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker context show' displays the current Docker context."
    },
    {
        "question": "What is the command to create a Docker service with specific constraints in swarm mode?",
        "options": [
            "docker service create --constraint",
            "docker create service --constraint",
            "docker service deploy --constraint",
            "docker swarm service create --constraint"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service create --constraint' allows you to specify placement constraints for the service."
    },
    {
        "question": "How do you update the resources allocated to a running container?",
        "options": [
            "docker update --cpu-shares --memory",
            "docker container update --cpus --memory",
            "docker service update --limit-cpu --limit-memory",
            "docker run --cpus --memory"
        ],
        "answer": [
            2
        ],
        "explanation": "'docker service update --limit-cpu --limit-memory' updates the CPU and memory limits for a running service."
    },
    {
        "question": "What is the command to create a Docker config in swarm mode?",
        "options": [
            "docker config create",
            "docker create config",
            "docker swarm config create",
            "docker service config create"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker config create' is used to create a new config in Docker swarm mode."
    },
    {
        "question": "How do you view the details of a Docker config in swarm mode?",
        "options": [
            "docker config inspect",
            "docker inspect config",
            "docker config details",
            "docker details config"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker config inspect' shows detailed information about a config in swarm mode."
    },
    {
        "question": "What is the command to remove a Docker config in swarm mode?",
        "options": [
            "docker config rm",
            "docker remove config",
            "docker config delete",
            "docker delete config"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker config rm' removes a config from Docker swarm mode."
    },
    {
        "question": "How do you create a Docker secret in swarm mode?",
        "options": [
            "docker secret create",
            "docker create secret",
            "docker swarm secret create",
            "docker service secret create"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker secret create' is used to create a new secret in Docker swarm mode."
    },
    {
        "question": "How do you view the details of a Docker secret in swarm mode?",
        "options": [
            "docker secret inspect",
            "docker inspect secret",
            "docker secret details",
            "docker details secret"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker secret inspect' shows detailed information about a secret in swarm mode."
    },
    {
        "question": "What is the command to remove a Docker secret in swarm mode?",
        "options": [
            "docker secret rm",
            "docker remove secret",
            "docker secret delete",
            "docker delete secret"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker secret rm' removes a secret from Docker swarm mode."
    },
    {
        "question": "How do you list all Docker secrets in swarm mode?",
        "options": [
            "docker secret ls",
            "docker ls secrets",
            "docker list secrets",
            "docker secret list"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker secret ls' lists all secrets in Docker swarm mode."
    },
    {
        "question": "What is the command to update a Docker secret in swarm mode?",
        "options": [
            "docker secret update",
            "docker update secret",
            "docker service update --secret",
            "docker config update --secret"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker secret update' updates the data of an existing secret in Docker swarm mode."
    },
    {
        "question": "How do you roll back a service to a previous version in swarm mode?",
        "options": [
            "docker service rollback",
            "docker service update --rollback",
            "docker service revert",
            "docker service restore"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service rollback' reverts a service to its previous stable version in swarm mode."
    },
    {
        "question": "What is the command to drain a node in Docker swarm?",
        "options": [
            "docker node drain",
            "docker drain node",
            "docker node stop",
            "docker node pause"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node drain' marks a node as unavailable for tasks and safely drains it."
    },
    {
        "question": "How do you promote a node in Docker swarm?",
        "options": [
            "docker node promote",
            "docker promote node",
            "docker node upgrade",
            "docker node demote"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node promote' promotes a worker node to manager in Docker swarm."
    },
    {
        "question": "What is the command to demote a manager node to a worker in Docker swarm?",
        "options": [
            "docker node demote",
            "docker demote node",
            "docker node downgrade",
            "docker node promote"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node demote' demotes a manager node to a worker in Docker swarm."
    },
    {
        "question": "How do you remove a node from a Docker swarm?",
        "options": [
            "docker node rm",
            "docker remove node",
            "docker node delete",
            "docker delete node"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node rm' removes a node from the swarm."
    },
    {
        "question": "What is the command to list all nodes in a Docker swarm?",
        "options": [
            "docker node ls",
            "docker node list",
            "docker ls nodes",
            "docker list nodes"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker node ls' lists all nodes in the swarm."
    },
    {
        "question": "How do you view the logs of a Docker service in swarm mode?",
        "options": [
            "docker service logs",
            "docker logs service",
            "docker service view-logs",
            "docker service inspect"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service logs' shows the logs for a Docker service in swarm mode."
    },
    {
        "question": "What is the command to update a Docker service in swarm mode?",
        "options": [
            "docker service update",
            "docker update service",
            "docker service modify",
            "docker service change"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service update' updates the configuration of a running service in swarm mode."
    },
    {
        "question": "How do you scale a Docker service in swarm mode?",
        "options": [
            "docker service scale",
            "docker service update --replicas",
            "docker update service --replicas",
            "docker service set replicas"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker service scale' adjusts the number of replicas for a service in swarm mode."
    },
    {
        "question": "What is the command to create a Docker stack in swarm mode?",
        "options": [
            "docker stack deploy",
            "docker deploy stack",
            "docker swarm stack deploy",
            "docker service stack deploy"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack deploy' deploys a new stack or updates an existing stack in Docker swarm mode."
    },
    {
        "question": "How do you remove a Docker stack in swarm mode?",
        "options": [
            "docker stack rm",
            "docker remove stack",
            "docker stack delete",
            "docker delete stack"
        ],
        "answer": [
            0
        ],
        "explanation": "'docker stack rm' removes a stack from Docker swarm mode."
    }
]